#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""

@author: emmamarchisin
"""

## modeling Dissolved Oxygen at 1m depth in Lake Mendota, WI

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import datetime
import sys

#Import data
MEdata_all=pd.read_csv("/Users/emmamarchisin/Desktop/Research/Data/Inputs/NTL LTER 1995-2022.csv")
ME_1meter=MEdata_all[MEdata_all['depth']==1]
ME_1meter=ME_1meter.dropna(subset=['wtemp','shortwaverad'])
ME_1meter.reset_index(inplace=True)
Date=pd.to_datetime(ME_1meter['sampledate']) #biweekly
DO_actual=ME_1meter['o2']
Date_daily=pd.date_range(start=Date.min(),end=Date.max(),freq='D') #created daily values

#Relevant columns
T=ME_1meter['wtemp'] #(degC)
I=ME_1meter['shortwaverad']

#Interpolate I and T for a daily timestep
ForInterpdata=pd.DataFrame({'Date':Date,'T':T,'I':I})
T_daily=np.interp(Date_daily.astype(np.int64),ForInterpdata['Date'].astype(np.int64),ForInterpdata['T'])
I_daily=np.interp(Date_daily.astype(np.int64),ForInterpdata['Date'].astype(np.int64),ForInterpdata['I'])
daily_inputs=pd.DataFrame({
    'Date':Date_daily,
    'T daily':T_daily,
    'I daily':I_daily
    })                

Tw_abs=T_daily+273.15 #Absolute Water Temp (K)

# Parameters
theta_npp=1.08 #Ahrenius constant
theta_r=1.04 #Ahrenius constant for Respiration
T20=20 #(degC)
IP=(3e-5) #slope of productivity curve of NPP
nDays=365 #(days)
dt=1 #timestep (days)
z=5 #thermocline depth (m) 
resp_docr=.003 #Resp DOC coeff
resp_poc=.15 #Resp POC coeff
OC= 38 # organic carbon (mgL^-1) from McAffee (2024)
k=0.5 #constant (md^-1) can be dynamic in real world
elev=.256 #elevation (m)
LA=39*10**7 #(m^2) Lake Area of Mendota
LV=LA*z #volume
Sal=0 #Salinity (in freshwter lake=0)

Qin=38/365*LA #estimation g/yr stream inflow
Qout=Qin*.8 #estimation stream outflow


#Setup
nt=len(Date_daily) #number of steps
ArGPP=np.empty(nt+1)
ArR=np.empty(nt+1)
GPP=np.empty(nt+1)
Fatm=np.empty(nt+1)
DO=np.empty(nt+1)
dDO=np.empty(nt+1)
dDO2=np.empty(nt+1)
docr=np.empty(nt+1)
poc=np.empty(nt+1)
R_docr=np.empty(nt+1)
R_poc=np.empty(nt+1)
R_tot=np.empty(nt+1)

#Initial Conditions
DO[0]=13.1*LV 
docr[0]=5*LV
poc[0]=2.0*LV
dDO[0]=0

#DO Sat Calculations
PsiSF=-139.34411+((1.575701*10**5)/Tw_abs)-((6.642308*10**7)/(Tw_abs**2))+((1.243800*10**10)/(Tw_abs**3))-((8.621949*10**11)/(Tw_abs**4))#DO sat of sealevel freshwater
PsiSal=(2.718281828459045)**(-Sal*(1.7674*10**-2+(10.754/Tw_abs)-(2140.7/(Tw_abs**2)))) #fractional reduction of Sat from Salinity
PsiElev=1-(0.11988*elev)+(6.10834*(10**-3)*(elev**2))-1.60747*(10**-4)*(elev**3)#fractional reduction of freshwater sat sealevel to elevation
DOsat=PsiElev*PsiSal*(2.718281828459045)**(PsiSF)*LV


for i in range(1,nt): #Calculating DO created from Gross Primary Production (GPP)
    ArGPP[i]=(theta_npp**(T_daily[i]-T20)) #Temperature correction
    GPP[i]=IP*I_daily[i]*ArGPP[i]*LV 

for i in range(1,nt): #Calculating DO uptake from Respiration
    ArR[i]=(theta_r**(T_daily[i]-T20)) #Temperature correction
    R_docr[i]=docr[i-1]*resp_docr*ArR[i] #Resp for DOCr scaled up for LV already
    R_poc[i]=poc[i-1]*resp_poc*ArR[i] #Resp for POC scaled up for LV already
    R_tot[i]=(32/12)*(R_docr[i]+R_poc[i]) #Combined respiration calculated from respiration of DOC and POC
    docr[i]=docr[i-1]-R_docr[i]+Qin-Qout 
    poc[i]=poc[i-1]+(12/32)*GPP[i]-R_poc[i]-0.4*poc[i-1]

for i in range(1,nt):#calculating change in DO- BASIC METABOLISM, also Net Ecosystem Production (NEP)
    dDO[i]=(GPP[i]-R_tot[i])

for i in range (1,nt):
    Fatm[i]=k*((DOsat[i]-DO[i-1])/z) #atmospheric exchange
    DO[i]=DO[i-1]+GPP[i]-R_tot[i]+Fatm[i] #change in actual DO concentations
    dDO2[i]=GPP[i]-R_tot[i]+Fatm[i] #change in DO inlcuding Atmospheric exchange
    
 
#results

results=pd.DataFrame({
    'Date':Date_daily[:nt],
    'DO': DO[:nt],
    'dDO': dDO[:nt],
    'GPP':GPP[:nt],
    'R':R_tot[:nt],
    'Fatm':Fatm[:nt]
    })

print(DO/LV) #back in mg/L units


#Graphing
plt.figure(figsize=(12,6))
plt.plot(Date_daily[237:1332], (DO[237:1332]/LV), label='Calculated DO', color='blue',marker='o')
plt.plot(Date_daily[237:1332],(DOsat[237:1332]/LV),label='DO Saturation', color='green',marker='o')
plt.plot(Date[15:61], (DO_actual[15:61]), label='Actual DO', color='red',marker='o')
plt.xlabel('Date')
plt.ylabel('Calculated DO (mg/L')
plt.show()

plt.figure(figsize=(12,6))
plt.plot(Date_daily[237:1332], (dDO2[237:1332]/LV), label='DO change', color='blue',marker='o')
plt.xlabel('Date')
plt.ylabel('Change in DO (mg/L')
plt.show()

plt.plot(Date_daily[237:1332], GPP[237:1332], label='GPP', color='green',marker='o')
plt.xlabel('Date')
plt.xticks(rotation=45)
plt.ylabel('GPP')
plt.show()

plt.plot(Date_daily[237:1332], R_tot[237:1332], label='R', color='red',marker='o')
plt.xlabel('Date')
plt.xticks(rotation=45)
plt.ylabel('Respiration')
plt.show()

plt.plot(Date_daily[237:1332], Fatm[237:1332], label='Fatm', color='purple',marker='o')
plt.xlabel('Date')
plt.xticks(rotation=45)
plt.ylabel('Fatm')
plt.show()

